{"version":3,"sources":["components/Person/person.jsx","components/context/SimpleContext.js","components/Person/loopPerson.jsx","components/common/Header.jsx","components/Person/NewPerson.jsx","App.js","index.js"],"names":["Person","fullname","personDelete","nameChanger","className","onChange","type","value","onClick","SimpleContext","createContext","persons","person","handleDeletePerson","handleNameChanger","handleNewPerson","setPerson","LoopedPersons","context","useContext","map","per","key","id","e","Header","appTitle","badgeStyle","length","Badge","pill","variant","NewPerson","onSubmit","preventDefault","placeholder","App","useState","getPersons","setPersons","getSinglePerson","setSinglePerson","getShowPersons","setShowPersons","showHide","Provider","copyState","filterState","filter","p","personIndex","findIndex","pe","toast","error","position","POSITION","BOTTOM_CENTER","autoClose","Math","floor","random","warn","success","push","allPer","target","render","document","getElementById"],"mappings":"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","file":"static/js/main.b21c00f8.chunk.js","sourcesContent":["import React from 'react';\nimport '../../App.css'\nimport Zoom from 'react-reveal/Zoom';\n\nconst Person = ({ fullname, personDelete, nameChanger }) => {\n    return (\n        <Zoom >\n            <div className=\"container d-flex mb-2 shadow-lg p-4 gooshe\">\n                <div className=\"input-group\" onChange={nameChanger}>\n                    <input className=\"form-control\" onChange={nameChanger} type=\"text\" value={fullname} />\n                    <button className=\"btn btn-danger  fa fa-trash\" onClick={personDelete} ></button>\n                    {/* <button className=\"btn btn-success  fa fa-pencil\" onClick={nameChanger} ></button> */}\n                </div>\n            </div >\n        </Zoom>\n\n    );\n}\n\nexport default Person; ","import { createContext } from 'react';\n\nconst SimpleContext = createContext({\n    persons: [],\n    person: \"\",\n    handleDeletePerson: () => { },\n    handleNameChanger: () => { },\n    handleNewPerson: () => { },\n    setPerson: () => { }\n})\n\nexport default SimpleContext;  ","import React, { useContext } from 'react';\nimport Person from './person';\nimport SimpleContext from '../context/SimpleContext';\n\n\n\nconst LoopedPersons = () => {\n    const context = useContext(SimpleContext)\n\n    return (\n\n        <div>\n            {context.persons.map(per =>\n                <Person\n                    key={per.id}\n                    fullname={per.fullname}\n                    personDelete={() => context.handleDeletePerson(per.id)}\n                    nameChanger={(e) => context.handleNameChanger(e, per.id)}\n                />\n            )}\n        </div>\n\n    );\n}\n\nexport default LoopedPersons;","import React, { useContext } from 'react';\nimport SimpleContext from '../context/SimpleContext';\nimport { Badge } from 'react-bootstrap';\n\n\nconst Header = ({ appTitle }) => {\n    const myContext = useContext(SimpleContext);\n    const { persons } = myContext;\n\n    let badgeStyle = \"\";\n\n    if (persons.length >= 3) badgeStyle = \"success\"\n    if (persons.length <= 2) badgeStyle = \"warning\"\n    if (persons.length <= 1) badgeStyle = \"danger\"\n\n\n    return (\n        <div>\n            <div>\n                <h2>{appTitle}</h2>\n                <p>You Saved\n                            <Badge pill variant={badgeStyle} className=\"m-1 \" >\n                        {persons.length}\n                    </Badge>\n                    Member\n                        </p>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Header;","import React, { useContext } from 'react';\n\nimport SimpleContext from '../context/SimpleContext';\n\n\n\nconst NewPerson = () => {\n\n    const context = useContext(SimpleContext);\n\n\n    return (\n        // <SimpleContext.Consumer>\n        //     {context => (\n        <div >\n            <form className=\"form-inline justify-content-center\" onSubmit={e => e.preventDefault()}>\n                <div className=\"input-group w-50 mb-5\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"New Person\"\n                        className=\"form-control\"\n                        onChange={context.setPerson}\n                        value={context.person}\n                    />\n                    <button type=\"submit\" className=\"fa fa-plus btn btn-primary\" onClick={context.handleNewPerson}></button>\n                </div>\n            </form>\n\n        </div>\n        //     )}\n        // </SimpleContext.Consumer>\n    );\n}\n\nexport default NewPerson;","import React, { useState } from 'react';\nimport LoopedPersons from './components/Person/loopPerson';\nimport './App.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport Header from './components/common/Header';\nimport NewPerson from './components/Person/NewPerson';\n\n// Context Api\nimport SimpleContext from './components/context/SimpleContext';\n\nconst App = () => {\n\n    const [getPersons, setPersons] = useState([])\n    const [getSinglePerson, setSinglePerson] = useState(\"\")\n    const [getShowPersons, setShowPersons] = useState(true)\n\n\n    const handleShowPerson = () => {\n        setShowPersons(!getShowPersons)\n    }\n\n    const handleDeletePerson = (id) => {\n        // First We Should Make a Copy of State\n        const copyState = [...getPersons];\n        // Second : push copy in Filter\n        const filterState = copyState.filter(p => p.id !== id)\n        // Last : Update the State\n        setPersons(filterState)\n\n        const personIndex = copyState.findIndex(p => p.id === id)\n        const pe = copyState[personIndex]\n        toast.error(`${pe.fullname} deleted`, {\n            position: toast.POSITION.BOTTOM_CENTER,\n            autoClose: 2000\n        })\n    }\n\n    const handleNameChanger = (e, id) => {\n        const { persons: allPer } = getPersons;\n\n        const personIndex = allPer.findIndex(p => p.id === id);\n        const person = allPer[personIndex];\n        person.fullname = e.target.value;\n\n        const persons = [...allPer]\n\n        persons[personIndex] = person\n        setPersons(persons)\n    }\n\n    const handleNewPerson = (e) => {\n        const persons = [...getPersons]\n        const person = {\n            id: Math.floor(Math.random() * 10000),\n            fullname: getSinglePerson\n        };\n        if (person.fullname === \"\" || person.fullname === \" \") {\n            // alert(\"Please Write A Name\")\n            toast.warn(\"Please Fill The Name\", {\n                position: toast.POSITION.BOTTOM_CENTER,\n                autoClose: 1000\n            })\n        } else {\n\n\n            toast.success(`${person.fullname} added`, {\n                position: toast.POSITION.BOTTOM_CENTER,\n                autoClose: 2000\n            })\n            persons.push(person)\n            setPersons(persons)\n            setSinglePerson(\"\")\n        }\n\n    }\n\n    const setPerson = (e) => {\n        setSinglePerson(e.target.value)\n\n    }\n\n    let showHide = null\n    if (getShowPersons) {\n        showHide = <LoopedPersons />\n    }\n\n    return (\n        <SimpleContext.Provider\n            value={{\n                persons: getPersons,\n                person: getSinglePerson,\n                handleDeletePerson: handleDeletePerson,\n                handleNewPerson: handleNewPerson,\n                handleNameChanger: handleNameChanger,\n                setPerson: setPerson\n            }}>\n            <div className=\"text-center\">\n                <div className=\"container gooshe shadow-lg mb-3 text-light mt-3 p-5\">\n\n                    <Header appTitle=\"Person Manager\" />\n                    <NewPerson />\n                    <button\n                        className={getShowPersons ? \"btn btn-outline-danger btn-block \" : \"btn  btn-outline-primary \"}\n                        onClick={handleShowPerson}>\n                        {getShowPersons ? \"Hide\" : \"Show\"}\n                    </button>\n\n                </div>\n\n\n                {showHide}\n                <ToastContainer />\n            </div>\n        </SimpleContext.Provider>\n    );\n}\n\n\n\n\nexport default App; ","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nrender(\n    <App />,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}